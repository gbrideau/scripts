#!/bin/sh

###########################################################################################################################################################

# HotPi Pro - Mobile Hotspot & Media Server +Emulation Station (SIMCom SIM7600/Quectel EC25 - Qualcomm MSM Interface)

###########################################################################################################################################################

# INITIALIZATION

echo "
HotPi Pro is being installed on your system...
"
sleep 1

###########################################################################################################################################################

# SOFTWARE UPDATES

apt update && sudo apt upgrade -y
apt install bridge-utils dnsmasq hostapd ifupdown iptables libqmi-utils pix-plym-splash plymouth plymouth-themes resolvconf samba udhcpc udiskie udisks2 xrdp -y
apt purge dhcpcd modemmanager -y
wget https://raw.githubusercontent.com/gbrideau/scripts/main/hotpicodes -O /etc/hotpicodes
wget https://raw.githubusercontent.com/gbrideau/scripts/main/hotpipro.png -O /usr/share/plymouth/themes/pix/splash.png

###########################################################################################################################################################

# USER COMMANDS

	# Set Wi-Fi Network Country Code

echo '#!/bin/sh
echo "
Enter your Wi-Fi network country code:
(type \\e[93mlist\\e[0m for a detailed Wi-Fi network country code list)
"
read var
var=$(echo $var | tr a-z A-Z)
if [ "$var" = LIST ]
then
cat /etc/hotpicodes
sleep 1
hotpicode
exit
elif [ ${#var} -gt 0 -a $(grep -o "$var" /etc/hotpicodes > /dev/null ; echo $?) = 0 ]
then
sudo sed -i /country_code=.*/d /etc/hostapd/hostapd.conf
sudo sh -c "echo country_code=$var >> /etc/hostapd/hostapd.conf"
echo "
Your Wi-Fi network country code has been set to: \\e[36m$var\\e[0m
"
else
echo "
You have entered an invalid entry...
"
sleep 1
hotpicode
exit
fi
sleep 1' > /bin/hotpicode

	# Set Wi-Fi Network Name

echo '#!/bin/sh
echo "
Create your Wi-Fi network name:
(1-32 characters)
"
read var
if [ ${#var} -lt 1 -o ${#var} -gt 32 ]
then
echo "
Your Wi-Fi network name must have 1-32 characters...
"
sleep 1
hotpiname
exit
fi
sudo sed -i /ssid=.*/d /etc/hostapd/hostapd.conf
sudo sh -c "echo ssid=$var >> /etc/hostapd/hostapd.conf"
echo "
Your Wi-Fi network name has been set to: \\e[36m$var\\e[0m
"
sleep 1' > /bin/hotpiname

	# Set Wi-Fi Network Password

echo '#!/bin/sh
echo "
Create your Wi-Fi network password:
(8-63 characters)
"
read var
if [ ${#var} -lt 8 -o ${#var} -gt 63 ]
then
echo "
Your Wi-Fi network password must have 8-63 characters...
"
sleep 1
hotpipassword
exit
fi
sudo sed -i /wpa_passphrase=.*/d /etc/hostapd/hostapd.conf
sudo sh -c "echo wpa_passphrase=$var >> /etc/hostapd/hostapd.conf"
echo "
Your Wi-Fi network password has been set to: \\e[36m$var\\e[0m
"
sleep 1' > /bin/hotpipassword

	# Set Composite Video Standard

echo '#!/bin/sh
echo "
Enter your composite video standard:
(NTSC, Japanese NTSC, PAL, Brazilian PAL, Progressive Scan NTSC, Progressive Scan PAL)
"
read var
var=$(echo $var | tr A-Z a-z)
if [ "$var" = ntsc ]
then
sudo sed -i /^sdtv_mode=.*/d /boot/config.txt
sudo sh -c "echo sdtv_mode=0 >> /boot/config.txt"
echo "
Your composite video standard has been set to: \\e[36mNTSC\\e[0m
"
elif [ "$var" = "japanese ntsc" ]
then
sudo sed -i /^sdtv_mode=.*/d /boot/config.txt
sudo sh -c "echo sdtv_mode=1 >> /boot/config.txt"
echo "
Your composite video standard has been set to: \\e[36mJapanese NTSC\\e[0m
"
elif [ "$var" = pal ]
then
sudo sed -i /^sdtv_mode=.*/d /boot/config.txt
sudo sh -c "echo sdtv_mode=2 >> /boot/config.txt"
echo "
Your composite video standard has been set to: \\e[36mPAL\\e[0m
"
elif [ "$var" = "brazilian pal" ]
then
sudo sed -i /^sdtv_mode=.*/d /boot/config.txt
sudo sh -c "echo sdtv_mode=3 >> /boot/config.txt"
echo "
Your composite video standard has been set to: \\e[36mBrazilian PAL\\e[0m
"
elif [ "$var" = "progressive scan ntsc" ]
then
sudo sed -i /^sdtv_mode=.*/d /boot/config.txt
sudo sh -c "echo sdtv_mode=16 >> /boot/config.txt"
echo "
Your composite video standard has been set to: \\e[36mProgressive Scan NTSC\\e[0m
"
elif [ "$var" = "progressive scan pal" ]
then
sudo sed -i /^sdtv_mode=.*/d /boot/config.txt
sudo sh -c "echo sdtv_mode=18 >> /boot/config.txt"
echo "
Your composite video standard has been set to: \\e[36mProgressive Scan PAL\\e[0m
"
else
echo "
You have entered an invalid entry...
"
sleep 1
hotpistandard
exit
fi' > /bin/hotpistandard

	# Set Composite Video Aspect Ratio

echo '#!/bin/sh
echo "
Enter your composite video aspect ratio:
(4:3, 14:9, 16:9)
"
read var
if [ "$var" = 4:3 ]
then
sudo sed -i /^sdtv_aspect=.*/d /boot/config.txt
sudo sh -c "echo sdtv_aspect=1 >> /boot/config.txt"
elif [ "$var" = 14:9 ]
then
sudo sed -i /^sdtv_aspect=.*/d /boot/config.txt
sudo sh -c "echo sdtv_aspect=2 >> /boot/config.txt"
elif [ "$var" = 16:9 ]
then
sudo sed -i /^sdtv_aspect=.*/d /boot/config.txt
sudo sh -c "echo sdtv_aspect=3 >> /boot/config.txt"
else
echo "
You have entered an invalid entry...
"
sleep 1
hotpiratio
exit
fi
echo "
Your composite video aspect ratio has been set to: \\e[36m$var\\e[0m
"' > /bin/hotpiratio

	# Start Internet Connection

echo '#!/bin/sh
if [ $(wget -q --spider google.com ; echo $?) != 0 ]
then
echo "
Your internet connection is being established...
"
sleep 1
sudo qmicli -d /dev/cdc-wdm0 -E raw-ip &&
sudo qmicli -d /dev/cdc-wdm0 -p --wds-start-network=ip-type=4 --client-no-release-cid &&
sudo udhcpc -i wwan0 &&
sleep 1 &&
echo "
Your internet connection has been established.
"
if [ $(wget -q --spider google.com ; echo $?) != 0 ]
then
sleep 1
echo "
Your internet connection could not be established.
"
fi
elif [ $(wget -q --spider google.com ; echo $?) = 0 ]
then
echo "
Your internet connection has already been established...
"
sleep 1
echo "
Would you like to reestablish your internet connection?
(yes/no)
"
read var
var=$(echo $var | tr A-Z a-z)
if [ "$var" = yes ]
then
sudo ifconfig wwan0 down
hotpistart
exit
elif [ "$var" = no ]
then
echo "
Your internet connection has been resumed.
"
else
echo "
You have entered an invalid entry...
"
sleep 0.5
hotpistart
exit
fi
fi' > /bin/hotpistart

	# Stop Internet Connection

echo '#!/bin/sh
if [ $(wget -q --spider google.com ; echo $?) = 0 ]
then
sudo ifconfig wwan0 down
echo "
Your internet connection has been terminated.
"
elif [ $(wget -q --spider google.com ; echo $?) != 0 ]
then
echo "
Your internet connection has not already been established.
"
fi' > /bin/hotpistop

	# Mount USB Storage Device

echo '#!/bin/sh
echo "
Enter your USB storage device name:
(type \\e[93mlist\\e[0m for a detailed list of available USB storage device names)
"
read var
var=$(echo $var | tr A-Z a-z)
if [ "$var" = list ]
then
echo
lsblk -o NAME,SIZE,MOUNTPOINT | sed /mmcblk0/d
echo
sleep 1
hotpimount
exit
elif [ $(lsblk -n -o MOUNTPOINT /dev/$var > /dev/null 2>&1 ; echo $?) = 0 ] && [ -z "$(lsblk -n -o MOUNTPOINT /dev/$var)" ]
then
echo "
Your USB storage device is being mounted...
"
sleep 1
udisksctl mount -b /dev/$var
sleep 1
echo "
Your USB storage device has been mounted.
"
elif [ -n "$(lsblk -n -o MOUNTPOINT /dev/$var 2> /dev/null)" ]
then
echo "
Your USB storage device has already been mounted.
"
else
echo "
You have entered an invalid entry...
"
sleep 1
hotpimount
exit
fi' > /bin/hotpimount

	# Unmount USB Storage Device

echo '#!/bin/sh
echo "
Enter your USB storage device name:
(type \\e[93mlist\\e[0m for a detailed list of available USB storage device names)
"
read var
var=$(echo $var | tr A-Z a-z)
if [ "$var" = list ]
then
echo
lsblk -o NAME,SIZE,MOUNTPOINT | sed /mmcblk0/d
echo
sleep 1
hotpiunmount
exit
elif [ -n "$(lsblk -n -o MOUNTPOINT /dev/$var 2> /dev/null)" ]
then
echo "
Your USB storage device is being unmounted...
"
sleep 1
udisksctl unmount -b /dev/$var
sleep 1
echo "
Your USB storage device has been unmounted.
"
elif [ $(lsblk -n -o MOUNTPOINT /dev/$var > /dev/null 2>&1 ; echo $?) = 0 ] && [ -z "$(lsblk -n -o MOUNTPOINT /dev/$var)" ]
then
echo "
Your USB storage device has already been unmounted.
"
else
echo "
Your have entered an invalid entry...
"
sleep 1
hotpiunmount
exit
fi' > /bin/hotpiunmount

	# Launch Emulation Station

echo '#!/bin/sh
emulationstation' > /bin/hotpistation

	# Reboot Raspberry Pi

echo '#!/bin/sh
sudo reboot' > /bin/hotpireboot

	# Shutdown Raspberry Pi

echo '#!/bin/sh
sudo shutdown now' > /bin/hotpishutdown

	# View User Command List

echo '#!/bin/sh
echo "
COMMAND                     DESCRIPTION

\\e[93mhotpicode\\e[0m                   Set Wi-Fi Network Country Code
\\e[93mhotpiname\\e[0m                   Set Wi-Fi Network Name
\\e[93mhotpipassword\\e[0m               Set Wi-Fi Network Password
\\e[93mhotpistandard\\e[0m               Set Composite Video Standard
\\e[93mhotpiratio\\e[0m                  Set Composite Video Aspect Ratio
\\e[93mhotpistart\\e[0m                  Start Internet Connection
\\e[93mhotpistop\\e[0m                   Stop Internet Connection
\\e[93mhotpimount\\e[0m                  Mount USB Storage Device
\\e[93mhotpiunmount\\e[0m                Unmount USB Storage Device
\\e[93mhotpistation\\e[0m                Launch Emulation Station
\\e[93mhotpireboot\\e[0m                 Reboot Raspberry Pi
\\e[93mhotpishutdown\\e[0m               Shutdown Raspberry Pi
\\e[93mhotpihelp\\e[0m                   View User Command List
"' > /bin/hotpihelp

###########################################################################################################################################################

# USER PERMISSIONS

	# User Commands

chmod -R 777 /bin/hotpi*

	# USB Mounting

sed -i -e 87s/auth_admin/yes/ -e 89s/auth_admin_keep/yes/ /usr/share/polkit-1/actions/org.freedesktop.UDisks2.policy

###########################################################################################################################################################

# NETWORK SETTINGS

        # Network Bridge

                # Gateway Node

sed -i -e /allow-hotplug\ br0/d -e /iface\ br0\ inet\ static/d -e /address\ 192.168.0.1/d -e /bridge_ports\ wlan0\ eth0/d /etc/network/interfaces
echo 'allow-hotplug br0
iface br0 inet static
address 192.168.0.1
bridge_ports wlan0 eth0' >> /etc/network/interfaces

                # DHCP Server

sed -i -e /interface=br0/d -e /dhcp-range=192.168.0.2,192.168.0.254,24h/d /etc/dnsmasq.conf
echo 'interface=br0
dhcp-range=192.168.0.2,192.168.0.254,24h' >> /etc/dnsmasq.conf

                # Packet Forwarding

sed -i /^net.ipv4.ip_forward=1/d /etc/sysctl.conf
echo net.ipv4.ip_forward=1 >> /etc/sysctl.conf

		# Packet Filtering

iptables -t nat -F
iptables -t nat -A POSTROUTING -o wwan0 -j MASQUERADE
iptables-save > /etc/hotpitables

        # Wi-Fi Network

echo 'interface=wlan0
bridge=br0
ieee80211ac=1
channel=36
hw_mode=a
ht_capab=[HT40+]
wmm_enabled=1
wpa=2
wpa_key_mgmt=WPA-PSK
rsn_pairwise=CCMP' > /etc/hostapd/hostapd.conf

        # Network-Attached Storage

echo 'sudo sed -i -e '"'"'/\[BIOS]/,$d'"'"' -e '"'"'/\[RetroPie]/,$d'"'"' /etc/samba/smb.conf
sudo sh -c "echo '"'"'[RetroPie]
path = /home/RetroPie
public = yes
writeable = yes
[USB Storage]
path = /media/$USER
public = yes
writeable = yes'"'"' >> /etc/samba/smb.conf"
sudo mkdir -p /home/RetroPie /media/$USER
sudo chmod -R 777 /home/RetroPie /media/$USER' > /etc/profile.d/hotpisamba.sh

###########################################################################################################################################################

# MEDIA SETTINGS

        # Splash Screen

sed -i -e s/\ plymouth.ignore-serial-consoles// -e s/\ splash// /boot/firmware/cmdline.txt
sed -i s/$/\ plymouth.ignore-serial-consoles\ splash/ /boot/firmware/cmdline.txt
echo '[Unit]
Before=display-manager.service plymouth-quit.service
[Service]
Type=oneshot
ExecStart=sleep 3
[Install]
WantedBy=plymouth-start.service' > /etc/systemd/system/hotpisplash.service

###########################################################################################################################################################

# POWER SETTINGS

        # Power Button

sed -i /dtoverlay=gpio-shutdown,debounce=1000/d /boot/firmware/config.txt
echo dtoverlay=gpio-shutdown,debounce=1000 >> /boot/firmware/config.txt

        # USB Ports

sed -i /usb_max_current_enable=1/d /boot/firmware/config.txt
echo usb_max_current_enable=1 >> /boot/firmware/config.txt

###########################################################################################################################################################

# AUTOMATION

	# Internet Connection

echo '[Service]
ExecStart=hotpistart' > /etc/systemd/system/hotpistart.service
echo 'ATTR{idVendor}=="1e0e", ATTR{idProduct}=="9001", RUN="/bin/systemctl start hotpistart"
ATTR{idVendor}=="2c7c", ATTR{idProduct}=="0125", RUN="/bin/systemctl start hotpistart"' > /etc/udev/rules.d/hotpistart.rules

	# Packet Filtering

echo '[Service]
ExecStart=sh -c '"'"'iptables-restore < /etc/hotpitables'"'"'
[Install]
WantedBy=multi-user.target' > /etc/systemd/system/hotpitables.service

	# USB Mounting

echo '[Service]
ExecStart=udiskie -N -F' > /etc/systemd/user/hotpimount.service
echo systemctl --user start hotpimount > /etc/profile.d/hotpimount.sh

###########################################################################################################################################################

# EXECUTION

hotpicode
hotpiname
hotpipassword
systemctl unmask hostapd
systemctl enable hostapd hotpisplash hotpitables resolvconf

###########################################################################################################################################################

# FINALIZATION

echo "
HotPi Pro has been installed on your system...
(use \e[93mhotpihelp\e[0m for a detailed user command list)
"
sleep 1
echo "
Press ENTER to reboot...
"
read var
reboot

###########################################################################################################################################################
